# PPSD 绘图配置文件 - 改进的分组结构
# 使用方法：python run_cp_ppsd.py config_plot.toml
# 此配置文件采用精细分组结构，解决参数关联性问题，特别是百分位数和皮特森曲线参数的分组管理
# 配置文件用于从指定目录加载一个或多个PPSD数据 (.npz 文件) 并执行绘图操作。
# NPZ文件应已通过计算型配置文件 (如 config.toml) 生成。

# ========================================
# 1. 全局设置
# ========================================
[global]
log_level = "DEBUG"                          # 日志级别："DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"
description = "PPSD绘图配置文件 - 分组结构版本"  # 配置文件描述信息
version = "2.0"                              # 配置文件版本号

# ========================================
# 2. 输入输出配置
# ========================================
[paths]
# NPZ文件必须预先存在且有效，否则脚本应报错退出。
# input_npz_dir 指定了包含一个或多个预先计算好的PPSD数据 (.npz) 文件的目录。
# 脚本将尝试处理该目录下的所有 .npz 文件。
input_npz_dir = "./output/npz/"         # 指定存放NPZ文件的目录路径
inventory_path = "./input/BJ.XML"       # 仪器响应文件路径 (可能需要用于绘图时的元数据，如台站名)
output_dir = "./output/plots/"          # 输出目录 (图像保存于此)

# output_filename_pattern 定义了生成图像文件名的规则。
# 可以使用以下占位符:
#   绘图类型(在绘图时确定): {plot_type} （plot_type="standard", "temporal", "spectrogram"）
#   时间信息 (来自PPSD数据的开始/结束时间):
#     开始时间: {start_year}, {start_month}, {start_day}, {start_hour}, {start_minute}, {start_second}, {start_julday}
#     {start_datetime} (例如 YYYYMMDDHHMM 格式的紧凑开始时间戳)
#     结束时间: {end_year}, {end_month}, {end_day}, {end_hour}, {end_minute}, {end_second}, {end_julday}
#     {end_datetime} (例如 YYYYMMDDHHMM 格式的紧凑结束时间戳)
#     兼容性: {datetime}, {year}, {month}, {day}, {hour}, {minute}, {second}, {julday} (等同于开始时间)
#   台站信息: {network}, {station}, {location}, {channel}
#     例如: "{plot_type}_{start_datetime}_{end_datetime}_{network}-{station}-{location}-{channel}.png"
#     或者: "{plot_type}_{datetime}_{network}-{station}-{location}-{channel}.png" (仅使用开始时间)
# 如果此参数未设置或为空，脚本将使用基于NPZ文件名的默认命名规则。
# 使用时间范围的示例: "{plot_type}_{datetime}_{network}-{station}-{location}-{channel}.png"
output_filename_pattern = "{plot_type}_{start_datetime}_{end_datetime}_{network}.{station}.{location}.{channel}.png"

# ========================================
# 3. 绘图基本设置
# ========================================
[plotting]
# 绘图类型：可以是单个字符串如 "standard", "temporal", "spectrogram",
# 或包含这些值的列表，例如 ["standard", "temporal", "spectrogram"]。
plot_type = ["standard", "temporal", "spectrogram"]

# --- NPZ合并策略 ---
npz_merge_strategy = "auto"               # 合并策略: "auto", "none"
                                          # "auto": 自动按SEED ID分组并使用add_npz()合并
                                          # "none": 每个NPZ文件单独绘图

# 图像生成参数
dpi = 150                               # 图像分辨率 (dots per inch)
figure_size = [12, 8]                   # 图像尺寸 [宽度, 高度] (英寸)

# ========================================
# 4. 标准图配置
# ========================================
[standard]
# --- 基本显示控制 ---
show_histogram = true                   # 是否绘制2D直方图本身
show_percentiles = false                # 是否显示百分位数线
show_noise_models = true                # 是否显示全球噪声模型（皮特森曲线）
show_coverage = false                   # 是否显示数据覆盖度
show_mode = true                        # 是否显示众数PSD曲线
show_mean = false                        # 是否显示均值PSD曲线

# --- 绘图样式控制 ---
standard_grid = true                    # 是否在直方图上显示网格
period_lim = [0.01, 50.0]              # PPSD标准图绘图显示的周期范围（秒）。若 xaxis_frequency=true, 此处应为频率 (Hz)
xaxis_frequency = false                 # PPSD标准图X轴是否显示频率 (Hz) 而不是周期 (秒)
cumulative_plot = false                 # 是否显示累积直方图 (PPSD.plot中的 cumulative 参数)
coverage_alpha = 0.5                    # 数据覆盖度横条的透明度 (0.0-1.0)，0.5表示50%透明度
cumulative_number_of_colors = 25        # 累积直方图的离散颜色数量
max_num_face_colors = 40                # PPSD标准图中概率面元的最大颜色数量(此为脚本自定义参数，非直接ObsPy参数)
standard_cmap = "hot_r_custom"          # PPSD图的颜色映射方案。CMRmap反向配色（0-80%范围）- 科学标准，优化PDF显示

# 标准图样式子分组
# --- 百分位数线配置 ---
[standard.percentiles]
values = [10, 50, 90]                   # 要显示的百分位数列表
color = "lightgray"                     # 百分位数线颜色
linewidth = 1.0                         # 百分位数线宽度
linestyle = "--"                        # 百分位数线样式 ("-", "--", "-.", ":")
alpha = 0.8                             # 百分位数线透明度 (0.0-1.0)

# --- 皮特森曲线配置 ---
[standard.peterson]
nlnm_color = "lightgray"                # NLNM（New Low Noise Model）曲线颜色
nhnm_color = "lightgray"                # NHNM（New High Noise Model）曲线颜色
linewidth = 1.0                         # 皮特森曲线线宽
linestyle = "--"                        # 皮特森曲线线型 ("-", "--", "-.", ":")
alpha = 1.0                             # 皮特森曲线透明度 (0.0-1.0)

# --- 众数线配置 ---
[standard.mode]
color = "orange"                        # 众数线颜色
linewidth = 1.0                         # 众数线宽度
linestyle = "-"                         # 众数线样式 ("-", "--", "-.", ":")
alpha = 0.9                             # 众数线透明度 (0.0-1.0)

# --- 均值线配置 ---
[standard.mean]
color = "green"                         # 均值线颜色
linewidth = 1.0                         # 均值线宽度
linestyle = "-"                         # 均值线样式 ("-", "--", "-.", ":")
alpha = 0.9                             # 均值线透明度 (0.0-1.0)

# ========================================
# 5. 时间演化图配置
# ========================================
[temporal]
# 绘制PSD值随时间演化曲线的特定周期（秒）
temporal_plot_periods = [0.1, 1.0, 8.0, 20.0]
# X轴（时间轴）刻度标签的时间格式
time_format_x = "%Y-%m-%d"
# 是否在图上显示网格
temporal_grid = true
# 是否显示图例
temporal_legend = true
# 线条颜色 (可选，为多个周期的列表或单一颜色)
# temporal_color = ["blue", "red", "green", "orange"]
# 线条样式 (可选)
# temporal_linestyle = "-"
# 线条标记 (可选)
# temporal_marker = "o"

# ========================================
# 6. 频谱图配置
# ========================================
[spectrogram]
# 颜色图的振幅限制 [min_db, max_db]
clim = [-180, -100]
# X轴（时间轴）刻度标签的时间格式 - 测试明显格式验证修复
time_format_x = "%Y%m%d %H:%M"
# 是否在图上显示网格
spectrogram_grid = true
# PPSD图的颜色映射方案。自定义配色：Ocean反向配色，浅色到深色，优雅渐变
spectrogram_cmap = "ocean_r_custom"

# ========================================
# 7. 颜色配置
# ========================================
[colors]
# 自定义配色方案列表
# 可选的配色方案，用于不同类型的图像（已优化为增强对比度范围，突出PDF曲线特征）
available_cmaps = [
    "viridis_custom",      # Viridis配色（0-80%范围）- 增强对比度，突出PDF曲线
    "ocean_custom",        # Ocean水色配色（20-90%范围）- 突出中高值，增强PDF对比度
    "ocean_r_custom",      # Ocean反向配色（0-60%范围）- 浅色背景，强化PDF曲线对比度
    "hot_r_custom",        # Hot反向配色（0-60%范围）- 浅色背景，冷色调强化PDF可视化
    "plasma_custom",       # Plasma配色（10-85%范围）- 高对比度，突出PDF峰值
    "CMRmap_r_custom"      # CMRmap反向配色（0-80%范围）- 科学标准，优化PDF显示
]

# 线条颜色预设
# 预定义的颜色方案，便于统一配色管理
[colors.presets]
primary = "blue"                        # 主色调
secondary = "red"                       # 辅助色调
accent = "orange"                       # 强调色
neutral = "lightgray"                   # 中性色
success = "green"                       # 成功状态色
warning = "orange"                      # 警告状态色
error = "red"                           # 错误状态色

# ========================================
# 8. 高级设置
# ========================================
[advanced]
# Matplotlib后端设置
matplotlib_backend = "Agg"              # 使用非交互式后端，不显示图片
# 字体设置
font_family = "WenQuanYi Micro Hei"     # 支持中文显示的字体
enable_chinese_fonts = true             # 是否启用中文字体支持
# 性能优化设置
memory_optimization = true              # 是否启用内存优化
parallel_processing = false             # 是否启用并行处理（实验性功能）

# 兼容性设置
# 指定需要的最低库版本，用于兼容性检查
[advanced.compatibility]
obspy_version = ">=1.4.0"               # ObsPy库最低版本要求
numpy_version = ">=1.20.0"              # NumPy库最低版本要求
matplotlib_version = ">=3.5.0"          # Matplotlib库最低版本要求 